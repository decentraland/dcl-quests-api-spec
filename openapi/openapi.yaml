openapi: 3.0.2
info:
  version: 1.0.0
  title: Decentraland Quests Server
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  x-logo:
    url: "https://cryptologos.cc/logos/decentraland-mana-logo.png"
  description: >
    Quests can be defined as sets of tasks that the player must complete in order to achieve an objective, 
    and usually receive a reward for doing so.
tags:
  - name: Quests
    description: >-
      Quests can be defined as sets of tasks that the player must complete in order to achieve an objective, and usually receive a reward for doing so.
      They are defined by the content creators, either globally (they are visible in all parts of the world) or locally (they only appear in a certain scene).
      Each player will be able to complete a Quest just once.
      Quests may have an associated Reward. For this version, only POAP rewards will be available.

  - name: Quest Tasks
    description: >-
      Each Quest is composed of several tasks that need to be done in order to complete the Quest
      Task requirements define the dependencies of the task to be available for the player to start working on it. Unless all the requirements of the task are met, the task won’t be displayed in any of the cards of the Quest Log, Quest Details, or Quest Tracker.
      Tasks may be grouped into different sections inside the Quest. These sections will be defined by the Content Creator, and will provide context to a group of tasks (ie: Day 1, Day 2, etc)
      Tasks may contain an initial location (x, y), where players can Jump In to start working on it. Teleport will use the closest spawn point to the location described in. the task to teleport the player, otherwise it will use the default spawn point of the scene
      Tasks could contain individual steps needed to complete the task.

  - name: Task Steps
    description: >-
      Each task may contain one or more steps. Each step can be triggered individually by the content creator to progress on the task, which will be checked by the server based on the validation rules.

  - name: Rewards
    description: >-
      Each quest may have a reward associated with it. For this initial version, we will limit this functionality to a single POAP badge.
      Each reward defines a “type” of reward that will be granted to each user that completes a particular quest. It describes its characteristics to be able to be shown to the user, but also has a “flow” that is used to decide how the user will claim that type of reward.

  - name: Quest Progress
    description: >-
      These set of endpoints are used to check the users progress on a Quest

servers:
  - url: "https://quests-api.decentraland.io"
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
paths:
  /status:
    $ref: paths/status.yaml

  # Creators API
  /creators/quests:
    $ref: paths/creators/creators@quests.yaml
  /creators/quests/{questId}:
    $ref: paths/creators/creators@quests@{questId}.yaml
  /creators/quests/{questId}/tasks:
    $ref: paths/creators/creators@quests@{questId}@tasks.yaml
  /creators/quests/{questId}/tasks/{taskId}:
    $ref: paths/creators/creators@quests@{questId}@tasks@{taskId}.yaml
  /creators/quests/{questId}/tasks/{taskId}/steps:
    $ref: paths/creators/creators@quests@{questId}@tasks@{taskId}@steps.yaml
  /creators/quests/{questId}/tasks/{taskId}/steps/{stepId}:
    $ref: paths/creators/creators@quests@{questId}@tasks@{taskId}@steps@{stepId}.yaml
  /creators/rewards:
    $ref: paths/creators/creators@rewards.yaml
  /creators/rewards/{id}:
    $ref: paths/creators/creators@rewards@{id}.yaml
  /creators/quests/{questId}/progresses:
    $ref: paths/creators/creators@quests@{questId}@progresses.yaml
  /creators/quests/{questId}/progresses/{address}:
    $ref: paths/creators/creators@quests@{questId}@progresses@{address}.yaml
  /creators/quests/{questId}/progresses/{address}/{progressId}:
    $ref: paths/creators/creators@quests@{questId}@progresses@{address}@{progressId}.yaml
  /creators/quests/{questId}/progresses/{address}/revert:
    $ref: paths/creators/creators@quests@{questId}@progresses@{address}@revert.yaml
  /creators/quests/{questId}/progresses/{address}/revert/{progressId}:
    $ref: paths/creators/creators@quests@{questId}@progresses@{address}@revert@{progressId}.yaml
  /creators/users:
    $ref: paths/creators/creators@users.yaml
  /creators/users/{userId}:
    $ref: paths/creators/creators@users@{userId}.yaml

  # Admin API
  /admin/invalidate-cache:
    $ref: paths/admin/admin@invalidate-cache.yaml

  # Players API
  /quests:
    $ref: paths/players/players@quests.yaml
  /quests/{quiestId}:
    $ref: paths/players/players@quests@{questId}.yaml
  /s/{quiestId}:
    $ref: paths/players/players@s@{questId}.yaml
  /kv/{quiestId}:
    $ref: paths/players/players@kv@{questId}.yaml
  /p/{quiestId}/{taskId}:
    $ref: paths/players/players@p@{questId}@{taskId}.yaml
